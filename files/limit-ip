#!/bin/bash

TELEGRAM_BOT_TOKEN="your-telegram-bot-token"
TELEGRAM_CHAT_ID="your-telegram-chat-id"
WAIT_TIME=900  # 15 minutes in seconds
VIOLATION_LIMIT=5  # Batas pelanggaran yang diperbolehkan sebelum akun di-lock
ip_limit_dir="/etc/kyt/limit"

# Fungsi untuk mengambil ISP dari IP
get_isp() {
    local ip=$1
    curl -s "https://ipinfo.io/${ip}/org" | cut -d " " -f 2- | sed -e 's/^"//' -e 's/"$//'
}

# Fungsi untuk mencatat pelanggaran log IP
log_violation() {
    local user=$1
    local ip=$2
    echo "$(date +'%Y-%m-%d %H:%M:%S') | $user | $ip" >> /var/log/xray/ip_violation.log
}

# Fungsi untuk mengirim notifikasi Telegram
send_log() {
    local protocol=$1
    local user=$2
    local iplimit=$3
    local cekcek=$4
    local log_count=$5
    local status=$6
    local detail_ips=$7

    if [ "$status" == "🟢🔓ACCOUNT UNLOCKED🔓🟢" ]; then
        TEXT="
<code>──────────────────────────────</code>
<b>⚠️ NOTIFICATIONS MULTI LOGIN ⚠️</b>
<code>──────────────────────────────</code>
<code>❖ » USER   : ${user}</code>
<code>❖ » ISP    : ${isp}</code>
<code>❖ » DOMAIN : ${domain}</code>
<code>❖ » PATH   : ${protocol}</code>
<code>❖ » TIME   : ${TIMEZONE}</code>
<code>❖ » DATE   : ${DATEVPS}</code>
<code>❖ » LOG    : ${log_count}</code>  
<code>──────────────────────────────</code>
<code>❖ » LIMIT  : ${iplimit} IP</code>
<code>──────────────────────────────</code>
<code>❖ » ${status}</code>
<code>──────────────────────────────</code>
"
    else
        TEXT="
<code>──────────────────────────────</code>
<b>⚠️ NOTIFICATIONS MULTI LOGIN ⚠️</b>
<code>──────────────────────────────</code>
<code>❖ » USER   : ${user}</code>
<code>❖ » ISP    : ${isp}</code>
<code>❖ » DOMAIN : ${domain}</code>
<code>❖ » PATH   : ${protocol}</code>
<code>❖ » TIME   : ${TIMEZONE}</code>
<code>❖ » DATE   : ${DATEVPS}</code>
<code>❖ » LOG    : ${log_count}</code>  
<code>──────────────────────────────</code>
<code>❖ » LIMIT  : ${iplimit} IP</code>
<code>❖ » LOGIN  : ${cekcek} IP</code>
<code>──────────────────────────────</code>
<code>❖ » DETAIL ${cekcek} IP LOGIN</code>
$(echo -e "$detail_ips" | sed 's/^/❖ » /' | sed 's/^/<code>/;s/$/<\/code>/')
<code>──────────────────────────────</code>
<code>❖ » ${status}</code>
<code>──────────────────────────────</code>
"
    fi

    # Kirim notifikasi ke Telegram
    curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
        -d chat_id="$TELEGRAM_CHAT_ID" \
        -d parse_mode="html" \
        -d text="$TEXT"
}

# Fungsi untuk mem-backup dan menghapus user yang melanggar
backup_and_remove_user() {
    local exp=$1
    local user=$2
    local config_file=$3
    local db_file=$4
    local user_ip_limit_file=$5

    # Backup user config dan hapus user
    grep -w "^### $user" $config_file | grep $exp -A 2 >> /etc/kyt/backup/${user}_backup.conf
    sed -i "/^### $user $exp/,/^},{/d" $config_file
    sed -i "/^### $user $exp/d" $db_file
}

# Fungsi untuk restore user
restore_user() {
    local user=$1
    local config_file=$2
    local db_file=$3
    local user_ip_limit_file=$4

    # Restore config dan remove IP limit
    cat /etc/kyt/backup/${user}_backup.conf >> $config_file
    rm -rf "$user_ip_limit_file"
}

# Fungsi utama untuk cek user dan pelanggaran
function check_user() {
    local protocol=$1
    local config_file=$2
    local db_file=$3

    local data=( $(ls $ip_limit_dir/$protocol/ip) )
    for user in "${data[@]}"; do
        local iplimit=$(cat "$ip_limit_dir/$protocol/ip/$user")
        local violations=$(grep "$user" /var/log/xray/access.log | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | sort | uniq | grep -v "^127.0.0.1$")
        local cekcek=$(echo -e "$violations" | wc -l)
        local detail_ips=""
        local log_count=0

        if [[ $cekcek -gt $iplimit ]]; then
            local exp=$(grep -w "^### $user" "$config_file" | cut -d ' ' -f 3 | sort | uniq)
            local uuid=$(grep -A 1 "^### $user $exp" $config_file | grep 'id' | cut -d '"' -f 4)

            # Log violations
            for ip in $(echo -e "$violations" | sort | uniq); do
                log_violation "$user" "$ip"
                local isp=$(get_isp "$ip")
                detail_ips+="<code>❖ » ${ip} ❖ » ${isp}</code>"
            done

            # Update jumlah log berdasarkan pelanggaran
            log_count=$(grep -c "$user" /var/log/xray/access.log)

            # Check for excess violations
            if check_violations "$user" "$ip_limit_dir/$protocol/ip/$user" $VIOLATION_LIMIT; then
                # Backup dan hapus user
                backup_and_remove_user "$exp" "$user" "$config_file" "$db_file" "$ip_limit_dir/$protocol/ip/$user"
                systemctl restart xray >> /dev/null 2>&1
                rm -rf "$ip_limit_dir/$protocol/ip/$user"
                
                # Kirim notifikasi dengan log yang benar saat locked
                send_log "$protocol" "$user" "$iplimit" "$cekcek" "$log_count" "🔴🔒ACCOUNT LOCKED🔒🔴" "$detail_ips"
                
                # Proses unlock user setelah 15 menit
                (
                    sleep $WAIT_TIME
                    restore_user "$user" "$config_file" "$db_file" "$ip_limit_dir/$protocol/ip/$user"
                    systemctl restart xray >> /dev/null 2>&1
                    
                    # Kirim notifikasi dengan jumlah log saat unlock
                    send_log "$protocol" "$user" "$iplimit" "$cekcek" "$log_count" "🟢🔓ACCOUNT UNLOCKED🔓🟢" ""
                ) &
            fi
        fi
    done
}

# Cek user untuk protokol vmess
check_user "vmess" "/etc/xray/config.json" "/etc/xray/xray.db"
