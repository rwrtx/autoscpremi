#!/bin/bash

LOCK_TIME=900  # Waktu penguncian dalam detik (15 menit)
LOCK_FILE="/tmp/locked_ips.txt"  # File untuk menyimpan IP yang dikunci

# Fungsi untuk mengirim log ke bot Telegram
function send_log(){
    CHATID=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 3)
    KEY=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 2)
    TIME="10"
    URL="https://api.telegram.org/bot$KEY/sendMessage"
    TEXT="
<code>────────────────────</code>
<b>⚠️ NOTIFICATIONS MULTI LOGIN XRAY ⚠️</b>
<code>────────────────────</code>
<code>Username        : </code><code>$user</code>
<code>Limit IP        : </code><code>${iplimit}</code>
<code>Login IP Count  : </code><code>${cekcek}</code>
<code>────────────────────</code>
<code>User IP         : </code><code>${user_ips}</code>
<code>────────────────────</code>
<code>Multi-Login IP  : </code><code>${multi_login_ips}</code>
<code>────────────────────</code>
"
    curl -s --max-time $TIME -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
}

# Fungsi untuk memeriksa apakah IP sudah dikunci
function is_ip_blocked() {
    local ip=$1
    iptables -L INPUT -v -n | grep "$ip" > /dev/null 2>&1
}

# Fungsi untuk mengunci IP menggunakan iptables
function block_ip() {
    local ip=$1
    if ! is_ip_blocked $ip; then
        iptables -A INPUT -s $ip -j DROP
        echo "Blocking IP: $ip"
    else
        echo "IP: $ip is already blocked"
    fi
}

# Fungsi untuk membuka kunci IP yang sudah melewati waktu penguncian
function unblock_ip() {
    local ip=$1
    iptables -D INPUT -s $ip -j DROP
    echo "Unblocking IP: $ip"
}

# Fungsi untuk memproses pembukaan kunci IP berdasarkan waktu penguncian
function unlock_ips() {
    local current_time=$(date +%s)
    local tmp_file=$(mktemp)

    while read -r line; do
        local timestamp=$(echo $line | awk '{print $1}')
        local ip=$(echo $line | awk '{print $2}')
        local user=$(echo $line | awk '{print $3}')

        if (( current_time - timestamp > LOCK_TIME )); then
            unblock_ip $ip
        else
            echo $line >> $tmp_file
        fi
    done < $LOCK_FILE

    mv $tmp_file $LOCK_FILE
}

# Fungsi untuk memproses IP pada layanan VMess
function vmip(){
    echo -n > /var/log/xray/access.log
    sleep 60  # Mengubah waktu tunggu menjadi 1 menit
    data=( `ls /etc/kyt/limit/vmess/ip`)
    unlock_ips  # Membuka kunci IP yang sudah melewati waktu penguncian
    
    for user in "${data[@]}"; do
        iplimit=$(cat /etc/kyt/limit/vmess/ip/$user)
        ehh=$(grep "$user" /var/log/xray/access.log | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | sort | uniq)
        cekcek=$(echo -e "$ehh" | wc -l)
        user_ips=$(echo $ehh | tr '\n' ' ')  # Mengumpulkan IP user

        if [[ $cekcek -gt $iplimit ]]; then
            multi_login_ips=$user_ips  # Menyimpan IP yang melebihi batas login
            for ip in $ehh; do
                block_ip $ip  # Mengunci IP
                echo "$(date +%s) $ip $user" >> $LOCK_FILE  # Menyimpan IP yang dikunci
                send_log  # Mengirim log dengan detail IP
            done
        fi
        sleep 0.1
    done
}

# Fungsi untuk memproses IP pada layanan VLess
function vlip(){
    echo -n > /var/log/xray/access.log
    sleep 60  # Mengubah waktu tunggu menjadi 1 menit
    data=( `ls /etc/kyt/limit/vless/ip`)
    unlock_ips  # Membuka kunci IP yang sudah melewati waktu penguncian
    
    for user in "${data[@]}"; do
        iplimit=$(cat /etc/kyt/limit/vless/ip/$user)
        ehh=$(grep "$user" /var/log/xray/access.log | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | sort | uniq)
        cekcek=$(echo -e "$ehh" | wc -l)
        user_ips=$(echo $ehh | tr '\n' ' ')  # Mengumpulkan IP user

        if [[ $cekcek -gt $iplimit ]]; then
            multi_login_ips=$user_ips  # Menyimpan IP yang melebihi batas login
            for ip in $ehh; do
                block_ip $ip  # Mengunci IP
                echo "$(date +%s) $ip $user" >> $LOCK_FILE  # Menyimpan IP yang dikunci
                send_log  # Mengirim log dengan detail IP
            done
        fi
        sleep 0.1
    done
}

# Fungsi untuk memproses IP pada layanan Trojan
function trip(){
    echo -n > /var/log/xray/access.log
    sleep 60  # Mengubah waktu tunggu menjadi 1 menit
    data=( `ls /etc/kyt/limit/trojan/ip`)
    unlock_ips  # Membuka kunci IP yang sudah melewati waktu penguncian
    
    for user in "${data[@]}"; do
        iplimit=$(cat /etc/kyt/limit/trojan/ip/$user)
        ehh=$(grep "$user" /var/log/xray/access.log | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | sort | uniq)
        cekcek=$(echo -e "$ehh" | wc -l)
        user_ips=$(echo $ehh | tr '\n' ' ')  # Mengumpulkan IP user

        if [[ $cekcek -gt $iplimit ]]; then
            multi_login_ips=$user_ips  # Menyimpan IP yang melebihi batas login
            for ip in $ehh; do
                block_ip $ip  # Mengunci IP
                echo "$(date +%s) $ip $user" >> $LOCK_FILE  # Menyimpan IP yang dikunci
                send_log  # Mengirim log dengan detail IP
            done
        fi
        sleep 0.1
    done
}

if [[ ${1} == "vmip" ]]; then
    vmip
elif [[ ${1} == "vlip" ]]; then
    vlip
elif [[ ${1} == "trip" ]]; then
    trip
fi
