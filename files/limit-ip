#!/bin/bash

LOCK_FILE="/tmp/multi_login_lock"
CHECK_INTERVAL=300  # Waktu cek ulang dalam detik (5 menit)
WAIT_TIME=900       # Waktu kunci dalam detik (15 menit)

function is_locked() {
    [[ -e "$LOCK_FILE" ]]
}

function lock() {
    touch "$LOCK_FILE"
}

function unlock() {
    rm -f "$LOCK_FILE"
}

function send_log() {
    CHATID=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 3)
    KEY=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 2)
    TIME="10"
    URL="https://api.telegram.org/bot$KEY/sendMessage"
    isp=$(cat /etc/xray/isp)
    domain=$(cat /etc/xray/domain)
    status="$1"
    TEXT="
<code>────────────────────</code>
<b>⚠️ NOTIFICATIONS MULTI LOGIN XRAY ⚠️</b>
<code>────────────────────</code>
<code>ISP    : ${isp}</code>
<code>Domain : ${domain}</code>
<code>────────────────────</code>
<code>Username        : ${user}</code>
<code>Limit IP        : ${iplimit}</code>
<code>Login IP Count  : ${cekcek}</code>
<code>────────────────────</code>
<code>Detail IP Login : </code>
$(echo -e "$ehh" | sed 's/^/<code>/;s/$/<\/code>/')
<code>────────────────────</code>
<code> ${status}</code>
<code>────────────────────</code>
"
    curl -s --max-time $TIME -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
}

function backup_and_remove_user() {
    exp=$1
    user=$2
    config_file=$3
    db_file=$4
    backup_file="/tmp/${user}_backup"

    # Backup the user configuration
    grep -w "^### $user $exp" $config_file > $backup_file
    grep -w "^### $user $exp" $db_file >> $backup_file

    # Remove the user configuration
    sed -i "/^### $user $exp/,/^},{/d" $config_file
    sed -i "/^### $user $exp/d" $db_file
}

function restore_user() {
    user=$1
    config_file=$2
    db_file=$3
    backup_file="/tmp/${user}_backup"

    # Restore the user configuration
    while read -r line; do
        echo "$line" >> $config_file
        echo "$line" >> $db_file
    done < $backup_file

    # Remove the backup file
    rm -f $backup_file
}

function remove_user_ips() {
    user=$1
    log_file=$2

    # Remove user's IPs from the access log
    sed -i "/$user/d" $log_file
}

function check_user() {
    protocol=$1
    config_file=$2
    db_file=$3
    ip_limit_dir="/etc/kyt/limit/$protocol/ip"
    log_file="/var/log/xray/access.log"

    data=( $(ls $ip_limit_dir) )
    for user in "${data[@]}"; do
        iplimit=$(cat "$ip_limit_dir/$user")
        ehh=$(grep "$user" $log_file | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | sort | uniq)
        cekcek=$(echo -e "$ehh" | wc -l)
        if [[ $cekcek -gt $iplimit ]]; then
            exp=$(grep -w "^### $user" "$config_file" | cut -d ' ' -f 3 | sort | uniq)
            backup_and_remove_user "$exp" "$user" "$config_file" "$db_file"
            systemctl restart xray >> /dev/null 2>&1
            rm -rf "$ip_limit_dir/$user"
            send_log "Terkunci Selama 15 Menit"
            sleep $WAIT_TIME
            restore_user "$user" "$config_file" "$db_file"
            remove_user_ips "$user" "$log_file"
            systemctl restart xray >> /dev/null 2>&1
            send_log "Terunlock"
        fi
        sleep 0.1
    done
}

function vmip() {
    if is_locked; then
        echo "Another process is already running. Exiting..."
        exit 1
    fi
    lock

    echo -n > /var/log/xray/access.log
    sleep 10
    check_user "vmess" "/etc/xray/config.json" "/etc/vmess/.vmess.db"

    unlock
}

function vlip() {
    if is_locked; then
        echo "Another process is already running. Exiting..."
        exit 1
    fi
    lock

    echo -n > /var/log/xray/access.log
    sleep 10
    check_user "vless" "/etc/xray/config.json" "/etc/vless/.vless.db"

    unlock
}

function trip() {
    if is_locked; then
        echo "Another process is already running. Exiting..."
        exit 1
    fi
    lock

    echo -n > /var/log/xray/access.log
    sleep 10
    check_user "trojan" "/etc/xray/config.json" "/etc/trojan/.trojan.db"

    unlock
}

while true; do
    vmip
    vlip
    trip
    sleep $CHECK_INTERVAL
done
